/*
 Copyright 2012 Google Inc. All Rights Reserved.
 Author: blakely@google.com (Tim Blakely)

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/

syntax = "proto2";

import "neuron.proto";

package bigbrain;

// This is a container class that acts as a storage unit for any type of
// NetworkUnit. Because the entire network can be serialized to a single file,
// and that file can contain a huge number of different types of message whose
// type cannot be known ahead of time, we have to read in a generic
// StoredNetworkUnit and from there get the actual type-specific descriptor
//
// For every additional neuron/channel type you add, you must add an optional
// field to this PBuffer

message StoredNetworkUnit {
  required CommonParams common_params = 1;
  // Neurons
  optional PulseIntegrateAndFireState piaf_state = 2;
  //optional INaPDesc inap_msg = 2;
  optional IKNaState ikna_state = 3;
  //optional IhDesc ih_msg = 4;
}
